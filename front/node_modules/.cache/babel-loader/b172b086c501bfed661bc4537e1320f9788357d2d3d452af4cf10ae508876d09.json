{"ast":null,"code":"import axios from \"../../utils/axios\";\nimport { API_LEVEL } from \"../../config\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  isLoading: true,\n  events: null\n};\nconst slice = createSlice({\n  name: \"product\",\n  initialState,\n  reducers: {\n    eventCreateRequest: state => {\n      state.isLoading = true;\n    },\n    eventCreateSuccess: (state, action) => {\n      state.isLoading = false;\n      state.events = action.payload;\n      state.success = true;\n    },\n    eventCreateFail: (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n      state.success = false;\n    },\n    // Update\n    eventUpdateRequest: state => {\n      state.isLoading = true;\n    },\n    eventUpdateSuccess: (state, action) => {\n      state.isLoading = false;\n      state.events = action.payload;\n      state.success = true;\n    },\n    eventUpdateFail: (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n      state.success = false;\n    },\n    // get all events of shop\n    getAlleventsShopRequest: state => {\n      state.isLoading = true;\n    },\n    getAlleventsShopSuccess: (state, action) => {\n      state.isLoading = false;\n      state.events = action.payload;\n    },\n    getAlleventsShopFailed: (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    },\n    // delete event of a shop\n    deleteeventRequest: state => {\n      state.isLoading = true;\n    },\n    deleteeventSuccess: (state, action) => {\n      state.isLoading = false;\n      state.message = action.payload;\n    },\n    deleteeventFailed: (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    }\n  }\n});\nexport default slice.reducer;\n\n// create event\nexport const createevent = newForm => async dispatch => {\n  try {\n    dispatch({\n      type: \"eventCreateRequest\"\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    };\n    await axios.post(`${API_LEVEL}/event/create-event`, newForm, {\n      config,\n      withCredentials: true\n    }).then(response => {\n      dispatch(slice.actions.eventCreateSuccess({\n        payload: response.product\n      }));\n    });\n  } catch (error) {\n    dispatch({\n      type: \"eventCreateFail\",\n      payload: error.message\n    });\n    console.log(error);\n  }\n};\n\n// // get all events of a shop\nexport const getAllEventsShop = id => async dispatch => {\n  try {\n    dispatch({\n      type: \"getAlleventsShopRequest\"\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    };\n    await axios.get(`${API_LEVEL}/event/get-all-events/${id}`, {\n      config,\n      withCredentials: true\n    }).then(response => {\n      dispatch(slice.actions.getAlleventsShopSuccess({\n        payload: response.data.events\n      }));\n    });\n  } catch (error) {\n    dispatch({\n      type: \"getAlleventsShopFailed\",\n      payload: error.message\n    });\n    console.log(error);\n  }\n};\nexport const updateEvent = newForm => async dispatch => {\n  try {\n    dispatch({\n      type: \"eventUpdateRequest\"\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    };\n    await axios.put(`${API_LEVEL}/event/update-event`, newForm, {\n      config,\n      withCredentials: true\n    }).then(response => {\n      dispatch(slice.actions.eventUpdateSuccess({\n        payload: response.product\n      }));\n    });\n  } catch (error) {\n    dispatch(slice.actions.eventUpdateFail({\n      payload: error.message\n    }));\n    console.log(error);\n  }\n};\nexport const deleteEvent = id => async dispatch => {\n  try {\n    dispatch({\n      type: \"deleteeventRequest\"\n    });\n    const {\n      data\n    } = await axios.delete(`${API_LEVEL}/event/delete-shop-event/${id}`, {\n      withCredentials: true\n    });\n    dispatch({\n      type: \"deleteeventSuccess\",\n      payload: data.message\n    });\n  } catch (error) {\n    dispatch({\n      type: \"deleteeventFailed\",\n      payload: error.message\n    });\n    console.log(error);\n  }\n};\nexport const getAllEvents = () => async dispatch => {\n  try {\n    dispatch({\n      type: \"getAlleventsShopRequest\"\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    };\n    await axios.get(`${API_LEVEL}/event/get-all-events`, {\n      config\n    }).then(response => {\n      dispatch(slice.actions.getAlleventsShopSuccess({\n        payload: response.data.events\n      }));\n    });\n  } catch (error) {\n    dispatch({\n      type: \"getAlleventsShopFailed\",\n      payload: error.message\n    });\n    console.log(error);\n  }\n};","map":{"version":3,"names":["axios","API_LEVEL","createSlice","initialState","isLoading","events","slice","name","reducers","eventCreateRequest","state","eventCreateSuccess","action","payload","success","eventCreateFail","error","eventUpdateRequest","eventUpdateSuccess","eventUpdateFail","getAlleventsShopRequest","getAlleventsShopSuccess","getAlleventsShopFailed","deleteeventRequest","deleteeventSuccess","message","deleteeventFailed","reducer","createevent","newForm","dispatch","type","config","headers","post","withCredentials","then","response","actions","product","console","log","getAllEventsShop","id","get","data","updateEvent","put","deleteEvent","delete","getAllEvents"],"sources":["C:/Users/mahbu/Documents/MERN/SMIELY/frontend/src/redux/slices/event.js"],"sourcesContent":["import axios from \"../../utils/axios\";\r\nimport { API_LEVEL } from \"../../config\";\r\nimport { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  isLoading: true,\r\n  events: null,\r\n};\r\n\r\nconst slice = createSlice({\r\n  name: \"product\",\r\n  initialState,\r\n  reducers: {\r\n    eventCreateRequest: (state) => {\r\n      state.isLoading = true;\r\n    },\r\n    eventCreateSuccess: (state, action) => {\r\n      state.isLoading = false;\r\n      state.events = action.payload;\r\n      state.success = true;\r\n    },\r\n    eventCreateFail: (state, action) => {\r\n      state.isLoading = false;\r\n      state.error = action.payload;\r\n      state.success = false;\r\n    },\r\n\r\n    // Update\r\n    eventUpdateRequest: (state) => {\r\n        state.isLoading = true;\r\n      },\r\n      eventUpdateSuccess: (state, action) => {\r\n        state.isLoading = false;\r\n        state.events = action.payload;\r\n        state.success = true;\r\n      },\r\n      eventUpdateFail: (state, action) => {\r\n        state.isLoading = false;\r\n        state.error = action.payload;\r\n        state.success = false;\r\n      },\r\n\r\n    // get all events of shop\r\n    getAlleventsShopRequest: (state) => {\r\n      state.isLoading = true;\r\n    },\r\n    getAlleventsShopSuccess: (state, action) => {\r\n      state.isLoading = false;\r\n      state.events = action.payload;\r\n    },\r\n    getAlleventsShopFailed: (state, action) => {\r\n      state.isLoading = false;\r\n      state.error = action.payload;\r\n    },\r\n\r\n     // delete event of a shop\r\n  deleteeventRequest: (state) => {\r\n    state.isLoading = true;\r\n  },\r\n  deleteeventSuccess: (state, action) => {\r\n    state.isLoading = false;\r\n    state.message = action.payload;\r\n  },\r\n  deleteeventFailed: (state, action) => {\r\n    state.isLoading = false;\r\n    state.error = action.payload;\r\n  },\r\n  },\r\n});\r\n\r\nexport default slice.reducer;\r\n\r\n// create event\r\nexport const createevent = (newForm) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: \"eventCreateRequest\",\r\n    });\r\n\r\n\r\n\r\n      const config = { headers: { \"Content-Type\": \"multipart/form-data\" } };\r\n\r\n    await axios\r\n      .post(\r\n        `${API_LEVEL}/event/create-event`,\r\n\r\n        newForm,\r\n        {\r\n          config,\r\n          withCredentials: true,\r\n        }\r\n      )\r\n      .then((response) => {\r\n        dispatch(\r\n            slice.actions.eventCreateSuccess({\r\n              payload: response.product,\r\n            })\r\n          );\r\n      });\r\n\r\n  } catch (error) {\r\n    dispatch({\r\n      type: \"eventCreateFail\",\r\n      payload: error.message,\r\n    });\r\n    console.log(error)\r\n  }\r\n  \r\n};\r\n\r\n// // get all events of a shop\r\nexport const getAllEventsShop = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: \"getAlleventsShopRequest\",\r\n    });\r\n\r\n    const config = { headers: { \"Content-Type\": \"multipart/form-data\" } };\r\n\r\n    await axios\r\n      .get(\r\n        `${API_LEVEL}/event/get-all-events/${id}`,\r\n\r\n        {\r\n          config,\r\n          withCredentials: true,\r\n        }\r\n      )\r\n      .then((response) => {\r\n      \r\n        dispatch(\r\n            slice.actions.getAlleventsShopSuccess({\r\n              payload: response.data.events,\r\n            })\r\n          );\r\n      });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: \"getAlleventsShopFailed\",\r\n      payload: error.message,\r\n    });\r\n    console.log(error)\r\n  }\r\n};\r\n\r\nexport const updateEvent = (newForm) => async (dispatch) => {\r\n    try {\r\n\r\n     \r\n        dispatch({\r\n          type: \"eventUpdateRequest\",\r\n        });\r\n    \r\n        const config = { headers: { \"Content-Type\": \"multipart/form-data\" } };\r\n    \r\n        await axios\r\n          .put(\r\n            `${API_LEVEL}/event/update-event`,\r\n    \r\n            newForm,\r\n            {\r\n              config,\r\n              withCredentials: true,\r\n            }\r\n          )\r\n          .then((response) => {\r\n            dispatch(\r\n              slice.actions.eventUpdateSuccess({\r\n                payload: response.product,\r\n              })\r\n            );\r\n          });\r\n      } catch (error) {\r\n        dispatch(\r\n          slice.actions.eventUpdateFail({\r\n            payload: error.message,\r\n          })\r\n        );\r\n        console.log(error);\r\n      }\r\n\r\n\r\n}\r\n\r\nexport const deleteEvent = (id) => async (dispatch) => { \r\n\r\n    try {\r\n      dispatch({\r\n        type: \"deleteeventRequest\",\r\n      });\r\n  \r\n      const { data } = await axios.delete(\r\n        `${API_LEVEL}/event/delete-shop-event/${id}`,\r\n        {\r\n          withCredentials: true,\r\n        }\r\n      );\r\n  \r\n      dispatch({\r\n        type: \"deleteeventSuccess\",\r\n        payload: data.message,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: \"deleteeventFailed\",\r\n        payload: error.message,\r\n      });\r\n  \r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  export const getAllEvents = () => async (dispatch) => {\r\n    try {\r\n      dispatch({\r\n        type: \"getAlleventsShopRequest\",\r\n      });\r\n  \r\n      const config = { headers: { \"Content-Type\": \"multipart/form-data\" } };\r\n  \r\n      await axios\r\n        .get(\r\n          `${API_LEVEL}/event/get-all-events`,\r\n  \r\n          {\r\n            config,\r\n          }\r\n        )\r\n        .then((response) => {\r\n        \r\n          dispatch(\r\n              slice.actions.getAlleventsShopSuccess({\r\n                payload: response.data.events,\r\n              })\r\n            );\r\n        });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: \"getAlleventsShopFailed\",\r\n        payload: error.message,\r\n      });\r\n      console.log(error)\r\n    }\r\n  };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}