{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mahbu\\\\Documents\\\\MERN\\\\SMIELY\\\\frontend\\\\src\\\\components\\\\NavBar\\\\Switcher.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { DarkModeSwitch } from \"react-toggle-dark-mode\";\nimport useDarkSide from '../../hooks/useDarkSide';\nimport useSettings from '../../hooks/useSettings';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Switcher() {\n  _s();\n  const [colorTheme, setTheme] = useDarkSide();\n  const [darkSide, setDarkSide] = useState(colorTheme === \"light\" ? true : false);\n  const toggleDarkMode = checked => {\n    setTheme(colorTheme);\n    setDarkSide(checked);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(DarkModeSwitch, {\n      style: {\n        marginBottom: \"2rem\"\n      },\n      checked: darkSide,\n      onChange: toggleDarkMode,\n      size: 25\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n}\n_s(Switcher, \"IPV5YMkZ6qqWjuT3gJPLNk/UNSM=\", false, function () {\n  return [useDarkSide];\n});\n_c = Switcher;\nvar _c;\n$RefreshReg$(_c, \"Switcher\");","map":{"version":3,"names":["useState","DarkModeSwitch","useDarkSide","useSettings","jsxDEV","_jsxDEV","Fragment","_Fragment","Switcher","_s","colorTheme","setTheme","darkSide","setDarkSide","toggleDarkMode","checked","children","style","marginBottom","onChange","size","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/mahbu/Documents/MERN/SMIELY/frontend/src/components/NavBar/Switcher.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { DarkModeSwitch } from \"react-toggle-dark-mode\";\r\nimport useDarkSide from '../../hooks/useDarkSide'\r\nimport useSettings from '../../hooks/useSettings';\r\n\r\nexport default function Switcher() {\r\n\tconst [colorTheme, setTheme] = useDarkSide();\r\n\t\r\n\tconst [darkSide, setDarkSide] = useState(\r\n\t\tcolorTheme === \"light\" ? true : false\r\n\t);\r\n\r\n\tconst toggleDarkMode = (checked) => {\r\n\t\tsetTheme(colorTheme);\r\n\t\tsetDarkSide(checked);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<DarkModeSwitch\r\n\t\t\t\tstyle={{ marginBottom: \"2rem\" }}\r\n\t\t\t\tchecked={darkSide}\r\n\t\t\t\tonChange={toggleDarkMode}\r\n\t\t\t\tsize={25}\r\n\t\t\t/>\r\n\t\t</>\r\n\t);\r\n}\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,cAAc,QAAQ,wBAAwB;AACvD,OAAOC,WAAW,MAAM,yBAAyB;AACjD,OAAOC,WAAW,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAElD,eAAe,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClC,MAAM,CAACC,UAAU,EAAEC,QAAQ,CAAC,GAAGT,WAAW,CAAC,CAAC;EAE5C,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CACvCU,UAAU,KAAK,OAAO,GAAG,IAAI,GAAG,KACjC,CAAC;EAED,MAAMI,cAAc,GAAIC,OAAO,IAAK;IACnCJ,QAAQ,CAACD,UAAU,CAAC;IACpBG,WAAW,CAACE,OAAO,CAAC;EACrB,CAAC;EAED,oBACCV,OAAA,CAAAE,SAAA;IAAAS,QAAA,eACCX,OAAA,CAACJ,cAAc;MACdgB,KAAK,EAAE;QAAEC,YAAY,EAAE;MAAO,CAAE;MAChCH,OAAO,EAAEH,QAAS;MAClBO,QAAQ,EAAEL,cAAe;MACzBM,IAAI,EAAE;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT;EAAC,gBACD,CAAC;AAEL;AAACf,EAAA,CAtBuBD,QAAQ;EAAA,QACAN,WAAW;AAAA;AAAAuB,EAAA,GADnBjB,QAAQ;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}