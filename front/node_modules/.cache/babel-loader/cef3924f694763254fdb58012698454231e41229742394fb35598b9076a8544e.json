{"ast":null,"code":"// import { showSnackbar } from \"./app\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"../../utils/axios\";\nimport { API_LEVEL } from \"../../config\";\nimport { ShowsnackBar } from \"../actions\";\n// import { ShowsnackBar } from \"../actions\";\n// import { showSnackbar } from \"./app\";\n// import { showSnackbar } from \"./app\";\n\nconst initialState = {\n  loading: true,\n  error: null,\n  user: null,\n  follow: false,\n  posts: null,\n  savedPost: null,\n  message: null\n};\nconst slice = createSlice({\n  name: \"userDetails\",\n  initialState,\n  reducers: {\n    LoadUserRequest: state => {\n      state.loading = true;\n    },\n    LoadUserDetailsSuccess: (state, action) => {\n      state.loading = false;\n      state.user = action.payload.payload;\n    },\n    LoadUserFail: (state, action) => {\n      state.loading = false;\n      state.error = action.payload.payload;\n    },\n    FollowUserRequest: state => {\n      state.loading = true;\n    },\n    FollowUserSuccess: (state, action) => {\n      state.loading = false;\n      state.user = action.payload.payload;\n    },\n    FollowUserFail: (state, action) => {\n      state.loading = false;\n      state.error = action.payload.payload;\n    },\n    // post crud\n    NewPostRequest: state => {\n      state.loading = true;\n    },\n    PostCreateSuccess: (state, action) => {\n      state.loading = false;\n      state.posts = action.payload;\n    },\n    PostCreateFail: (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    },\n    // Save Post\n    SavePostRequest: state => {\n      state.loading = true;\n    },\n    SavePostRequestSuccess: (state, action) => {\n      state.loading = false;\n      state.savedPost = action.payload.payload;\n    },\n    SavePostRequestFail: (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    },\n    // Save Post\n    LikePostRequest: state => {\n      state.loading = true;\n    },\n    LikePostRequestSuccess: (state, action) => {\n      state.loading = false;\n      state.message = action.payload.payload;\n    },\n    LikePostRequestFail: (state, action) => {\n      state.loading = false;\n      state.error = action.payload.payload;\n    }\n  }\n});\n\n// export the slice of reducer\nexport default slice.reducer;\n\n//  The Actions\nexport const getUserDetails = username => async dispatch => {\n  try {\n    console.log(username);\n    dispatch({\n      type: \"LoadUserRequest\"\n    });\n    const {\n      data\n    } = await axios.get(`${API_LEVEL}/user/userdetails/${username}`);\n    console.log(data.user);\n    dispatch(slice.actions.LoadUserDetailsSuccess({\n      payload: data.user\n    }));\n  } catch (error) {\n    dispatch({\n      type: \"LoadUserFail\",\n      payload: error\n    });\n  }\n};\n// Follow | Unfollow User\nexport const followUser = userId => async dispatch => {\n  try {\n    dispatch(slice.actions.FollowUserRequest());\n    const {\n      data\n    } = await axios.get(`${API_LEVEL}/user/follow/${userId}`, {\n      withCredentials: true\n    });\n    console.log(data);\n    dispatch(slice.actions.FollowUserSuccess({\n      payload: data\n    }));\n  } catch (error) {\n    console.log(error);\n    dispatch(slice.actions.FollowUserFail({\n      payload: error.message\n    }));\n  }\n};\nexport const addNewPost = postData => async dispatch => {\n  try {\n    dispatch({\n      type: \"NewPostRequest\"\n    });\n    const config = {\n      header: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    // const { data } = await axios.post(\"/api/v1/post/new\", postData, config);\n    await axios.post(`${API_LEVEL}/post/createpost`, postData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      },\n      withCredentials: true\n    }).then(res => {\n      console.log(res);\n      dispatch({\n        type: \"PostCreateSuccess\",\n        payload: res.data\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  } catch (error) {\n    dispatch({\n      type: \"PostCreateFail\",\n      payload: error.response.data.message\n    });\n  }\n};\nexport const savePost = postId => async dispatch => {\n  try {\n    dispatch(slice.actions.SavePostRequest);\n    const {\n      data\n    } = await axios.get(`${API_LEVEL}/post/${postId}`, {\n      withCredentials: true\n    });\n    dispatch(slice.actions.SavePostRequestSuccess({\n      payload: data\n    }));\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: \"SavePostRequestFail\",\n      payload: error.response\n    });\n  }\n};\nexport const likePost = postId => async dispatch => {\n  try {\n    dispatch(slice.actions.LikePostRequest);\n    const {\n      data\n    } = await axios.get(`${API_LEVEL}/post/${postId}`, {\n      withCredentials: true\n    });\n    console.log();\n    dispatch(slice.actions.LikePostRequestSuccess({\n      payload: data\n    }));\n  } catch (error) {\n    console.log(error);\n    dispatch(slice.actions.LikePostRequestFail({\n      payload: error\n    }));\n  }\n};","map":{"version":3,"names":["createSlice","axios","API_LEVEL","ShowsnackBar","initialState","loading","error","user","follow","posts","savedPost","message","slice","name","reducers","LoadUserRequest","state","LoadUserDetailsSuccess","action","payload","LoadUserFail","FollowUserRequest","FollowUserSuccess","FollowUserFail","NewPostRequest","PostCreateSuccess","PostCreateFail","SavePostRequest","SavePostRequestSuccess","SavePostRequestFail","LikePostRequest","LikePostRequestSuccess","LikePostRequestFail","reducer","getUserDetails","username","dispatch","console","log","type","data","get","actions","followUser","userId","withCredentials","addNewPost","postData","config","header","post","headers","then","res","catch","err","response","savePost","postId","likePost"],"sources":["C:/Users/mahbu/Documents/MERN/SMIELY/frontend/src/redux/slices/user.js"],"sourcesContent":["// import { showSnackbar } from \"./app\";\r\nimport { createSlice } from \"@reduxjs/toolkit\";\r\nimport axios from \"../../utils/axios\";\r\nimport { API_LEVEL } from \"../../config\";\r\nimport { ShowsnackBar } from \"../actions\";\r\n// import { ShowsnackBar } from \"../actions\";\r\n// import { showSnackbar } from \"./app\";\r\n// import { showSnackbar } from \"./app\";\r\n\r\nconst initialState = {\r\n  loading: true,\r\n  error: null,\r\n  user: null,\r\n  follow: false,\r\n  posts: null,\r\n  savedPost: null,\r\n  message: null,\r\n};\r\n\r\nconst slice = createSlice({\r\n  name: \"userDetails\",\r\n  initialState,\r\n  reducers: {\r\n    LoadUserRequest: (state) => {\r\n      state.loading = true;\r\n    },\r\n    LoadUserDetailsSuccess: (state, action) => {\r\n      state.loading = false;\r\n      state.user = action.payload.payload;\r\n    },\r\n    LoadUserFail: (state, action) => {\r\n      state.loading = false;\r\n      state.error = action.payload.payload;\r\n    },\r\n    FollowUserRequest: (state) => {\r\n      state.loading = true;\r\n    },\r\n    FollowUserSuccess: (state, action) => {\r\n      state.loading = false;\r\n      state.user = action.payload.payload;\r\n    },\r\n    FollowUserFail: (state, action) => {\r\n      state.loading = false;\r\n      state.error = action.payload.payload;\r\n    },\r\n\r\n    // post crud\r\n    NewPostRequest: (state) => {\r\n      state.loading = true;\r\n    },\r\n    PostCreateSuccess: (state, action) => {\r\n      state.loading = false;\r\n      state.posts = action.payload;\r\n    },\r\n    PostCreateFail: (state, action) => {\r\n      state.loading = false;\r\n      state.error = action.payload;\r\n    },\r\n\r\n    // Save Post\r\n    SavePostRequest: (state) => {\r\n      state.loading = true;\r\n    },\r\n    SavePostRequestSuccess: (state, action) => {\r\n      state.loading = false;\r\n      state.savedPost = action.payload.payload;\r\n    },\r\n    SavePostRequestFail: (state, action) => {\r\n      state.loading = false;\r\n      state.error = action.payload;\r\n    },\r\n\r\n    // Save Post\r\n    LikePostRequest: (state) => {\r\n      state.loading = true;\r\n    },\r\n    LikePostRequestSuccess: (state, action) => {\r\n      state.loading = false;\r\n      state.message = action.payload.payload;\r\n    },\r\n    LikePostRequestFail: (state, action) => {\r\n      state.loading = false;\r\n      state.error = action.payload.payload;\r\n    },\r\n  },\r\n});\r\n\r\n// export the slice of reducer\r\nexport default slice.reducer;\r\n\r\n//  The Actions\r\nexport const getUserDetails = (username) => async (dispatch) => {\r\n  try {\r\n    console.log(username);\r\n    dispatch({ type: \"LoadUserRequest\" });\r\n    const { data } = await axios.get(\r\n      `${API_LEVEL}/user/userdetails/${username}`\r\n    );\r\n\r\n    console.log(data.user);\r\n\r\n    dispatch(\r\n      slice.actions.LoadUserDetailsSuccess({\r\n        payload: data.user,\r\n      })\r\n    );\r\n  } catch (error) {\r\n    dispatch({\r\n      type: \"LoadUserFail\",\r\n      payload: error,\r\n    });\r\n  }\r\n};\r\n// Follow | Unfollow User\r\nexport const followUser = (userId) => async (dispatch) => {\r\n  try {\r\n    dispatch(slice.actions.FollowUserRequest());\r\n    const { data } = await axios.get(`${API_LEVEL}/user/follow/${userId}`, {\r\n      withCredentials: true,\r\n    });\r\n\r\n    console.log(data);\r\n    dispatch(\r\n      slice.actions.FollowUserSuccess({\r\n        payload: data,\r\n      })\r\n    );\r\n  } catch (error) {\r\n    console.log(error);\r\n    dispatch(\r\n      slice.actions.FollowUserFail({\r\n        payload: error.message,\r\n      })\r\n    );\r\n  }\r\n};\r\n\r\nexport const addNewPost = (postData) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: \"NewPostRequest\" });\r\n    const config = { header: { \"Content-Type\": \"application/json\" } };\r\n    // const { data } = await axios.post(\"/api/v1/post/new\", postData, config);\r\n    await axios\r\n      .post(`${API_LEVEL}/post/createpost`, postData, {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n        withCredentials: true,\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        dispatch({\r\n          type: \"PostCreateSuccess\",\r\n          payload: res.data,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: \"PostCreateFail\",\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const savePost = (postId) => async (dispatch) => {\r\n  try {\r\n    dispatch(slice.actions.SavePostRequest);\r\n    const { data } = await axios.get(`${API_LEVEL}/post/${postId}`, {\r\n      withCredentials: true,\r\n    });\r\n\r\n    dispatch(\r\n      slice.actions.SavePostRequestSuccess({\r\n        payload: data,\r\n      })\r\n    );\r\n  } catch (error) {\r\n    console.log(error);\r\n    dispatch({\r\n      type: \"SavePostRequestFail\",\r\n      payload: error.response,\r\n    });\r\n  }\r\n};\r\n\r\nexport const likePost = (postId) => async (dispatch) => {\r\n  try {\r\n    dispatch(slice.actions.LikePostRequest);\r\n    const { data } = await axios.get(`${API_LEVEL}/post/${postId}`,{withCredentials:true});\r\n\r\n    console.log()\r\n    dispatch(\r\n      slice.actions.LikePostRequestSuccess({\r\n        payload: data,\r\n      })\r\n    );\r\n  } catch (error) {\r\n    console.log(error);\r\n    dispatch(\r\n      slice.actions.LikePostRequestFail({\r\n        payload: error,\r\n      })\r\n    );\r\n  }\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}