{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mahbu\\\\Documents\\\\MERN\\\\SMIELY\\\\frontend\\\\src\\\\components\\\\NavBar\\\\Switcher.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { DarkModeSwitch } from \"react-toggle-dark-mode\";\nimport useDarkSide from \"../../hooks/useDarkSide\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Switcher() {\n  _s();\n  const [colorTheme, setTheme] = useDarkSide();\n  const [darkSide, setDarkSide] = useState(colorTheme === \"light\" ? true : false);\n  const toggleDarkMode = checked => {\n    setTheme(colorTheme);\n    setDarkSide(checked);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(DarkModeSwitch, {\n      checked: darkSide,\n      onChange: toggleDarkMode,\n      size: 30\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(Switcher, \"IPV5YMkZ6qqWjuT3gJPLNk/UNSM=\", false, function () {\n  return [useDarkSide];\n});\n_c = Switcher;\nvar _c;\n$RefreshReg$(_c, \"Switcher\");","map":{"version":3,"names":["useState","DarkModeSwitch","useDarkSide","jsxDEV","_jsxDEV","Fragment","_Fragment","Switcher","_s","colorTheme","setTheme","darkSide","setDarkSide","toggleDarkMode","checked","children","onChange","size","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/mahbu/Documents/MERN/SMIELY/frontend/src/components/NavBar/Switcher.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { DarkModeSwitch } from \"react-toggle-dark-mode\";\r\nimport useDarkSide from \"../../hooks/useDarkSide\";\r\n  \r\nexport default function Switcher() {\r\n    const [colorTheme, setTheme] = useDarkSide();\r\n    const [darkSide, setDarkSide] = useState(\r\n        colorTheme === \"light\" ? true : false\r\n    );\r\n  \r\n    const toggleDarkMode = (checked) => {\r\n        setTheme(colorTheme);\r\n        setDarkSide(checked);\r\n    };\r\n  \r\n    return (\r\n        <>\r\n            <DarkModeSwitch\r\n               \r\n                checked={darkSide}\r\n                onChange={toggleDarkMode}\r\n                size={30}\r\n            />\r\n        </>\r\n    );\r\n}"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,cAAc,QAAQ,wBAAwB;AACvD,OAAOC,WAAW,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAElD,eAAe,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAC/B,MAAM,CAACC,UAAU,EAAEC,QAAQ,CAAC,GAAGR,WAAW,CAAC,CAAC;EAC5C,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CACpCS,UAAU,KAAK,OAAO,GAAG,IAAI,GAAG,KACpC,CAAC;EAED,MAAMI,cAAc,GAAIC,OAAO,IAAK;IAChCJ,QAAQ,CAACD,UAAU,CAAC;IACpBG,WAAW,CAACE,OAAO,CAAC;EACxB,CAAC;EAED,oBACIV,OAAA,CAAAE,SAAA;IAAAS,QAAA,eACIX,OAAA,CAACH,cAAc;MAEXa,OAAO,EAAEH,QAAS;MAClBK,QAAQ,EAAEH,cAAe;MACzBI,IAAI,EAAE;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ;EAAC,gBACJ,CAAC;AAEX;AAACb,EAAA,CArBuBD,QAAQ;EAAA,QACGL,WAAW;AAAA;AAAAoB,EAAA,GADtBf,QAAQ;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}