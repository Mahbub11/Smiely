{"ast":null,"code":"import axios from 'axios';\nimport { BASE_URL } from '../config'; // app Base URL for FrontEnd\n\nconst axiosInstance = axios.create({\n  baseURL: BASE_URL\n});\naxios.defaults.withCredentials = true;\n\n// modifies the request config before it is sent, and axiosInstance.interceptors.response.use() \n// to add a function that handles the response data or error after it is received.\naxiosInstance.interceptors.response.use(response => response, error => Promise.reject(error.response && error.response.data || \"Something went Wrong\"));\nexport default axiosInstance;","map":{"version":3,"names":["axios","BASE_URL","axiosInstance","create","baseURL","defaults","withCredentials","interceptors","response","use","error","Promise","reject","data"],"sources":["C:/Users/mahbu/Documents/MERN/SMIELY/frontend/src/utils/axios.js"],"sourcesContent":["import axios from 'axios';\r\nimport { BASE_URL } from '../config'; // app Base URL for FrontEnd\r\n\r\n\r\n\r\nconst axiosInstance= axios.create({baseURL:BASE_URL});\r\naxios.defaults.withCredentials = true;\r\n\r\n\r\n\r\n// modifies the request config before it is sent, and axiosInstance.interceptors.response.use() \r\n// to add a function that handles the response data or error after it is received.\r\naxiosInstance.interceptors.response.use(\r\n    (response)=> response,\r\n    (error)=> Promise.reject((error.response && error.response.data) || \"Something went Wrong\")\r\n);\r\n\r\n\r\nexport default axiosInstance;\r\n\r\n\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,WAAW,CAAC,CAAC;;AAItC,MAAMC,aAAa,GAAEF,KAAK,CAACG,MAAM,CAAC;EAACC,OAAO,EAACH;AAAQ,CAAC,CAAC;AACrDD,KAAK,CAACK,QAAQ,CAACC,eAAe,GAAG,IAAI;;AAIrC;AACA;AACAJ,aAAa,CAACK,YAAY,CAACC,QAAQ,CAACC,GAAG,CAClCD,QAAQ,IAAIA,QAAQ,EACpBE,KAAK,IAAIC,OAAO,CAACC,MAAM,CAAEF,KAAK,CAACF,QAAQ,IAAIE,KAAK,CAACF,QAAQ,CAACK,IAAI,IAAK,sBAAsB,CAC9F,CAAC;AAGD,eAAeX,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}