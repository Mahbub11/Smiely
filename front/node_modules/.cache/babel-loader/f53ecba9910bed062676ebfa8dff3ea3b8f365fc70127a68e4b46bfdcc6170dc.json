{"ast":null,"code":"// import { showSnackbar } from \"./app\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"../../utils/axios\";\nimport { API_LEVEL } from \"../../config\";\nimport { ShowsnackBar } from \"../actions\";\n// import { ShowsnackBar } from \"../actions\";\n// import { showSnackbar } from \"./app\";\n// import { showSnackbar } from \"./app\";\n\nconst initialState = {\n  loading: false,\n  error: null,\n  post: null\n};\nconst slice = createSlice({\n  name: \"post\",\n  initialState,\n  reducers: {\n    NewPostRequest: state => {\n      state.loading = true;\n    },\n    PostCreateSuccess: (state, action) => {\n      state.loading = false;\n      state.post = action.payload;\n    },\n    PostCreateFail: (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    },\n    // get the post of following user\n    PostFollowingRequest: state => {\n      state.loading = true;\n    },\n    PostFollowingSuccess: (state, action) => {\n      state.loading = false;\n      state.post = action.payload;\n    },\n    PostFollowingFail: (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    },\n    PostFollowingReset: (state, action) => {\n      state.post = [];\n    },\n    PostFollowingResetError: (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    }\n  }\n});\n\n// export the slice of reducer\nexport default slice.reducer;\nexport const addNewPost = postData => async dispatch => {\n  try {\n    dispatch({\n      type: \"NewPostRequest\"\n    });\n    const config = {\n      header: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    // const { data } = await axios.post(\"/api/v1/post/new\", postData, config);\n    await axios.post(`${API_LEVEL}/post/createpost`, postData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      },\n      withCredentials: true\n    }).then(res => {\n      console.log(res);\n      dispatch({\n        type: \"PostCreateSuccess\",\n        payload: res.data\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  } catch (error) {\n    dispatch({\n      type: \"PostCreateFail\",\n      payload: error.response.data.message\n    });\n  }\n};\nexport const getPostsOfFollowing = function () {\n  let page = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n  return async dispatch => {\n    try {\n      dispatch(slice.actions.PostFollowingRequest);\n      setTimeout(async () => {\n        const {\n          data\n        } = await axios.get(`/api/v1/posts?page=${page}`);\n        dispatch(slice.actions.PostFollowingSuccess({\n          payload: data\n        }));\n      }, 300);\n    } catch (error) {\n      console.log(error);\n      dispatch(slice.actions.PostFollowingFail({\n        payload: error.message\n      }));\n    }\n  };\n};\nexport const postsOfFollowingReset = () => async dispatch => {\n  try {\n    dispatch(slice.actions.PostFollowingReset);\n  } catch (error) {}\n};","map":{"version":3,"names":["createSlice","axios","API_LEVEL","ShowsnackBar","initialState","loading","error","post","slice","name","reducers","NewPostRequest","state","PostCreateSuccess","action","payload","PostCreateFail","PostFollowingRequest","PostFollowingSuccess","PostFollowingFail","PostFollowingReset","PostFollowingResetError","reducer","addNewPost","postData","dispatch","type","config","header","headers","withCredentials","then","res","console","log","data","catch","err","response","message","getPostsOfFollowing","page","arguments","length","undefined","actions","setTimeout","get","postsOfFollowingReset"],"sources":["C:/Users/mahbu/Documents/MERN/SMIELY/frontend/src/redux/slices/post.js"],"sourcesContent":["// import { showSnackbar } from \"./app\";\r\nimport { createSlice } from \"@reduxjs/toolkit\";\r\nimport axios from \"../../utils/axios\";\r\nimport { API_LEVEL } from \"../../config\";\r\nimport { ShowsnackBar } from \"../actions\";\r\n// import { ShowsnackBar } from \"../actions\";\r\n// import { showSnackbar } from \"./app\";\r\n// import { showSnackbar } from \"./app\";\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  error: null,\r\n  post: null,\r\n};\r\n\r\nconst slice = createSlice({\r\n  name: \"post\",\r\n  initialState,\r\n  reducers: {\r\n    NewPostRequest: (state) => {\r\n      state.loading = true;\r\n    },\r\n    PostCreateSuccess: (state, action) => {\r\n      state.loading = false;\r\n      state.post = action.payload;\r\n    },\r\n    PostCreateFail: (state, action) => {\r\n      state.loading = false;\r\n      state.error = action.payload;\r\n    },\r\n\r\n    // get the post of following user\r\n    PostFollowingRequest: (state) => {\r\n      state.loading = true;\r\n    },\r\n    PostFollowingSuccess: (state, action) => {\r\n      state.loading = false;\r\n      state.post = action.payload;\r\n    },\r\n    PostFollowingFail: (state, action) => {\r\n      state.loading = false;\r\n      state.error = action.payload;\r\n    },\r\n    PostFollowingReset: (state, action) => {\r\n      state.post = [];\r\n    },\r\n    PostFollowingResetError: (state, action) => {\r\n      state.loading = false;\r\n      state.error = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\n// export the slice of reducer\r\nexport default slice.reducer;\r\nexport const addNewPost = (postData) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: \"NewPostRequest\" });\r\n    const config = { header: { \"Content-Type\": \"application/json\" } };\r\n    // const { data } = await axios.post(\"/api/v1/post/new\", postData, config);\r\n    await axios\r\n      .post(`${API_LEVEL}/post/createpost`, postData, {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n        withCredentials: true,\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        dispatch({\r\n          type: \"PostCreateSuccess\",\r\n          payload: res.data,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: \"PostCreateFail\",\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\nexport const getPostsOfFollowing =\r\n  (page = 1) =>\r\n  async (dispatch) => {\r\n    try {\r\n      dispatch(slice.actions.PostFollowingRequest);\r\n\r\n      setTimeout(async () => {\r\n        const { data } = await axios.get(`/api/v1/posts?page=${page}`);\r\n\r\n        dispatch(\r\n          slice.actions.PostFollowingSuccess({\r\n            payload: data,\r\n          })\r\n        );\r\n      }, 300);\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch(\r\n        slice.actions.PostFollowingFail({\r\n          payload: error.message,\r\n        })\r\n      );\r\n    }\r\n  };\r\n  export const postsOfFollowingReset = () => async (dispatch) => {\r\n\r\n    try {\r\n      dispatch(slice.actions.PostFollowingReset);\r\n      \r\n    } catch (error) {\r\n      \r\n    }\r\n\r\n  }\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}