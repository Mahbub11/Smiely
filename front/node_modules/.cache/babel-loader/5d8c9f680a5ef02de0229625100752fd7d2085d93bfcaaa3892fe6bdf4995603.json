{"ast":null,"code":"import axios from \"../../utils/axios\";\nimport { API_LEVEL } from \"../../config\";\nimport { createSlice, current } from \"@reduxjs/toolkit\";\nconst initialState = {\n  isLoading: true,\n  cart: localStorage.getItem(\"cartItems\") ? JSON.parse(localStorage.getItem(\"cartItems\")) : []\n};\nconst slice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    addToCart: (state, action) => {\n      const item = action.payload;\n      const isItemExist = current(state.cart).find((i, index) => i.payload._id === item.payload._id);\n      if (isItemExist) {\n        return {\n          ...state,\n          cart: current(state.cart).map(i => i.payload._id === isItemExist.payload._id ? item : i)\n        };\n      } else {\n        return {\n          ...state,\n          cart: [...state.cart, item]\n        };\n      }\n    },\n    removeCartItem: (state, action) => {\n      return {\n        ...state,\n        cart: current(state.cart).filter(i => i.payload._id !== action.payload.payload)\n      };\n    }\n  }\n});\nexport default slice.reducer;\n\n// create event\n\n// add to cart\nexport const addTocart = data => async (dispatch, getState) => {\n  dispatch(slice.actions.addToCart({\n    payload: data\n  }));\n  localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cart));\n  return data;\n};\n\n// remove from cart\nexport const removeFromCart = data => async (dispatch, getState) => {\n  dispatch(slice.actions.removeCartItem({\n    payload: data\n  }));\n  localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cart));\n  return data;\n};","map":{"version":3,"names":["axios","API_LEVEL","createSlice","current","initialState","isLoading","cart","localStorage","getItem","JSON","parse","slice","name","reducers","addToCart","state","action","item","payload","isItemExist","find","i","index","_id","map","removeCartItem","filter","reducer","addTocart","data","dispatch","getState","actions","setItem","stringify","removeFromCart"],"sources":["C:/Users/mahbu/Documents/MERN/SMIELY/frontend/src/redux/slices/cart.js"],"sourcesContent":["import axios from \"../../utils/axios\";\r\nimport { API_LEVEL } from \"../../config\";\r\nimport { createSlice, current } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  isLoading: true,\r\n  cart: localStorage.getItem(\"cartItems\")\r\n  ? JSON.parse(localStorage.getItem(\"cartItems\"))\r\n  : [],\r\n};\r\n\r\nconst slice = createSlice({\r\n  name: \"cart\",\r\n  initialState,\r\n  reducers: {\r\n    addToCart: (state, action) => {\r\n      const item = action.payload;\r\n      const isItemExist =current(state.cart).find((i,index) => i.payload._id=== item.payload._id);\r\n  \r\n      if (isItemExist) {\r\n        return { \r\n          ...state,\r\n          cart: current(state.cart).map((i) => i.payload._id === isItemExist.payload._id ?  item: i)\r\n        };\r\n      } \r\n      else {\r\n        return {\r\n          ...state,\r\n          cart: [...state.cart, item],\r\n        };\r\n      }\r\n    },\r\n    removeCartItem: (state, action) => {\r\n      return {\r\n        ...state,\r\n        cart: current(state.cart).filter((i) => i.payload._id !== action.payload.payload),\r\n        \r\n      };\r\n    },\r\n  },\r\n});\r\n\r\nexport default slice.reducer;\r\n\r\n// create event\r\n\r\n// add to cart\r\nexport const addTocart = (data) => async (dispatch, getState) => {\r\n \r\n  dispatch(\r\n    slice.actions.addToCart({\r\n      payload: data,\r\n    })\r\n );\r\n\r\n  localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cart));\r\n  return data;\r\n};\r\n\r\n // remove from cart\r\n export const removeFromCart = (data) => async (dispatch, getState) => {\r\n  dispatch(\r\n    slice.actions.removeCartItem({\r\n      payload:data\r\n    })\r\n  )\r\n  localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cart));\r\n  return data;\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,mBAAmB;AACrC,SAASC,SAAS,QAAQ,cAAc;AACxC,SAASC,WAAW,EAAEC,OAAO,QAAQ,kBAAkB;AAEvD,MAAMC,YAAY,GAAG;EACnBC,SAAS,EAAE,IAAI;EACfC,IAAI,EAAEC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,GACrCC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,GAC7C;AACJ,CAAC;AAED,MAAMG,KAAK,GAAGT,WAAW,CAAC;EACxBU,IAAI,EAAE,MAAM;EACZR,YAAY;EACZS,QAAQ,EAAE;IACRC,SAAS,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC5B,MAAMC,IAAI,GAAGD,MAAM,CAACE,OAAO;MAC3B,MAAMC,WAAW,GAAEhB,OAAO,CAACY,KAAK,CAACT,IAAI,CAAC,CAACc,IAAI,CAAC,CAACC,CAAC,EAACC,KAAK,KAAKD,CAAC,CAACH,OAAO,CAACK,GAAG,KAAIN,IAAI,CAACC,OAAO,CAACK,GAAG,CAAC;MAE3F,IAAIJ,WAAW,EAAE;QACf,OAAO;UACL,GAAGJ,KAAK;UACRT,IAAI,EAAEH,OAAO,CAACY,KAAK,CAACT,IAAI,CAAC,CAACkB,GAAG,CAAEH,CAAC,IAAKA,CAAC,CAACH,OAAO,CAACK,GAAG,KAAKJ,WAAW,CAACD,OAAO,CAACK,GAAG,GAAIN,IAAI,GAAEI,CAAC;QAC3F,CAAC;MACH,CAAC,MACI;QACH,OAAO;UACL,GAAGN,KAAK;UACRT,IAAI,EAAE,CAAC,GAAGS,KAAK,CAACT,IAAI,EAAEW,IAAI;QAC5B,CAAC;MACH;IACF,CAAC;IACDQ,cAAc,EAAEA,CAACV,KAAK,EAAEC,MAAM,KAAK;MACjC,OAAO;QACL,GAAGD,KAAK;QACRT,IAAI,EAAEH,OAAO,CAACY,KAAK,CAACT,IAAI,CAAC,CAACoB,MAAM,CAAEL,CAAC,IAAKA,CAAC,CAACH,OAAO,CAACK,GAAG,KAAKP,MAAM,CAACE,OAAO,CAACA,OAAO;MAElF,CAAC;IACH;EACF;AACF,CAAC,CAAC;AAEF,eAAeP,KAAK,CAACgB,OAAO;;AAE5B;;AAEA;AACA,OAAO,MAAMC,SAAS,GAAIC,IAAI,IAAK,OAAOC,QAAQ,EAAEC,QAAQ,KAAK;EAE/DD,QAAQ,CACNnB,KAAK,CAACqB,OAAO,CAAClB,SAAS,CAAC;IACtBI,OAAO,EAAEW;EACX,CAAC,CACJ,CAAC;EAEAtB,YAAY,CAAC0B,OAAO,CAAC,WAAW,EAAExB,IAAI,CAACyB,SAAS,CAACH,QAAQ,CAAC,CAAC,CAACzB,IAAI,CAACA,IAAI,CAAC,CAAC;EACvE,OAAOuB,IAAI;AACb,CAAC;;AAEA;AACA,OAAO,MAAMM,cAAc,GAAIN,IAAI,IAAK,OAAOC,QAAQ,EAAEC,QAAQ,KAAK;EACrED,QAAQ,CACNnB,KAAK,CAACqB,OAAO,CAACP,cAAc,CAAC;IAC3BP,OAAO,EAACW;EACV,CAAC,CACH,CAAC;EACDtB,YAAY,CAAC0B,OAAO,CAAC,WAAW,EAAExB,IAAI,CAACyB,SAAS,CAACH,QAAQ,CAAC,CAAC,CAACzB,IAAI,CAACA,IAAI,CAAC,CAAC;EACvE,OAAOuB,IAAI;AACb,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}