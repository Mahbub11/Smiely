{"ast":null,"code":"var _s = $RefreshSig$();\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { persistStore, persistReducer } from 'redux-persist';\nimport { rootPersistConfig, rootReducer } from './rootReducer';\nimport thunk from 'redux-thunk';\nconst store = configureStore({\n  reducer: persistReducer(rootPersistConfig, rootReducer),\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: false,\n    immutableCheck: false\n  })\n});\nconst persistor = persistStore(store);\nconst {\n  dispatch\n} = store;\nconst useAppSelector = useSelector;\nconst useAppDispatch = () => {\n  _s();\n  return useDispatch();\n};\n_s(useAppDispatch, \"jI3HA1r1Cumjdbu14H7G+TUj798=\", false, function () {\n  return [useDispatch];\n});\nexport { store, persistor, dispatch, useAppSelector, useAppDispatch };","map":{"version":3,"names":["configureStore","useDispatch","useSelector","persistStore","persistReducer","rootPersistConfig","rootReducer","thunk","store","reducer","middleware","getDefaultMiddleware","serializableCheck","immutableCheck","persistor","dispatch","useAppSelector","useAppDispatch","_s"],"sources":["C:/Users/mahbu/Documents/MERN/SMIELY/frontend/src/redux/store.js"],"sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { useDispatch,useSelector } from \"react-redux\";\r\nimport {persistStore,persistReducer}  from 'redux-persist'\r\nimport { rootPersistConfig, rootReducer } from './rootReducer';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst store=configureStore({\r\n    reducer:persistReducer(rootPersistConfig, rootReducer),\r\n    middleware:(getDefaultMiddleware)=>\r\n    getDefaultMiddleware({\r\n\r\n        serializableCheck:false,\r\n        immutableCheck:false,\r\n        \r\n        \r\n    })\r\n})\r\n\r\nconst persistor=persistStore(store);\r\nconst {dispatch} =store;\r\n const useAppSelector= useSelector;\r\n\r\n\r\n const useAppDispatch=()=> useDispatch();\r\n\r\nexport{ store,persistor,dispatch,useAppSelector,useAppDispatch}"],"mappings":";AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,SAASC,WAAW,EAACC,WAAW,QAAQ,aAAa;AACrD,SAAQC,YAAY,EAACC,cAAc,QAAQ,eAAe;AAC1D,SAASC,iBAAiB,EAAEC,WAAW,QAAQ,eAAe;AAC9D,OAAOC,KAAK,MAAM,aAAa;AAE/B,MAAMC,KAAK,GAACR,cAAc,CAAC;EACvBS,OAAO,EAACL,cAAc,CAACC,iBAAiB,EAAEC,WAAW,CAAC;EACtDI,UAAU,EAAEC,oBAAoB,IAChCA,oBAAoB,CAAC;IAEjBC,iBAAiB,EAAC,KAAK;IACvBC,cAAc,EAAC;EAGnB,CAAC;AACL,CAAC,CAAC;AAEF,MAAMC,SAAS,GAACX,YAAY,CAACK,KAAK,CAAC;AACnC,MAAM;EAACO;AAAQ,CAAC,GAAEP,KAAK;AACtB,MAAMQ,cAAc,GAAEd,WAAW;AAGjC,MAAMe,cAAc,GAACA,CAAA;EAAAC,EAAA;EAAA,OAAKjB,WAAW,CAAC,CAAC;AAAA;AAACiB,EAAA,CAAlCD,cAAc;EAAA,QAAMhB,WAAW;AAAA;AAEtC,SAAQO,KAAK,EAACM,SAAS,EAACC,QAAQ,EAACC,cAAc,EAACC,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}