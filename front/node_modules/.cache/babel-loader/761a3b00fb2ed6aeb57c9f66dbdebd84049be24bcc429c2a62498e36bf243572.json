{"ast":null,"code":"import { configureStore } from \"@reduxjs/toolkit\";\nimport { useDispatch, useSelector } from \"react-redux\";\n// import {persistStore,persistReducer}  from 'redux-persist'\n// import { rootPersistConfig, rootReducer } from './rootReducer';\n\n// const store=configureStore({\n//     reducer:persistReducer(rootPersistConfig, rootReducer),\n//     middleware:(getDefaultMiddleware)=>\n//     getDefaultMiddleware({\n//         serializableCheck:false,\n//         immutableCheck:false\n//     })\n// })\n\n// const persistor=persistStore(store);\n// const {dispatch} =store;\n//  const useAppSelector= useSelector;\n\n//  const useAppDispatch=()=> useDispatch();\n\n// export{ store,persistor,dispatch,useAppSelector,useAppDispatch}","map":{"version":3,"names":["configureStore","useDispatch","useSelector"],"sources":["C:/Users/mahbu/Documents/MERN/SMIELY/frontend/src/redux/store.js"],"sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { useDispatch,useSelector } from \"react-redux\";\r\n// import {persistStore,persistReducer}  from 'redux-persist'\r\n// import { rootPersistConfig, rootReducer } from './rootReducer';\r\n\r\n// const store=configureStore({\r\n//     reducer:persistReducer(rootPersistConfig, rootReducer),\r\n//     middleware:(getDefaultMiddleware)=>\r\n//     getDefaultMiddleware({\r\n//         serializableCheck:false,\r\n//         immutableCheck:false\r\n//     })\r\n// })\r\n\r\n// const persistor=persistStore(store);\r\n// const {dispatch} =store;\r\n//  const useAppSelector= useSelector;\r\n\r\n\r\n//  const useAppDispatch=()=> useDispatch();\r\n\r\n// export{ store,persistor,dispatch,useAppSelector,useAppDispatch}"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,SAASC,WAAW,EAACC,WAAW,QAAQ,aAAa;AACrD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}