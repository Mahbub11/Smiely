{"ast":null,"code":"// import { showSnackbar } from \"./app\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"../../utils/axios\";\nimport { API_LEVEL } from \"../../config\";\nimport { ShowsnackBar } from \"../actions\";\n// import { ShowsnackBar } from \"../actions\";\n// import { showSnackbar } from \"./app\";\n// import { showSnackbar } from \"./app\";\n\nconst initialState = {\n  isAuthenticated: false,\n  loading: true,\n  error: null,\n  user: null\n};\nconst slice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    LoadUserRequest: state => {\n      state.loading = true;\n    },\n    LoadUserSuccess: (state, action) => {\n      state.isAuthenticated = true;\n      state.loading = false;\n      state.user = action.payload;\n    },\n    LoadUserFail: (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n      state.isAuthenticated = false;\n    }\n  }\n});\n\n// export the slice of reducer\nexport default slice.reducer;\n\n//  The Actions\n\nexport const LoginUser = formValues => async dispatch => {\n  try {\n    await axios.post(`${API_LEVEL}/auth/login`, {\n      ...formValues\n    }, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      withCredentials: true\n    }).then(function (response) {\n      dispatch(slice.actions.LoadUserSuccess({\n        payload: response.data.user\n      }));\n      console.log(response.data);\n      dispatch(ShowsnackBar({\n        severity: \"success\",\n        message: response.data.message\n      }));\n    }).catch(function (error) {\n      dispatch({\n        type: \"LoadUserFail\",\n        payload: error\n      });\n      dispatch(ShowsnackBar({\n        severity: \"error\",\n        message: error.message\n      }));\n    });\n  } catch (error) {\n    dispatch({\n      type: \"LoadUserFail\",\n      payload: error\n    });\n  }\n};","map":{"version":3,"names":["createSlice","axios","API_LEVEL","ShowsnackBar","initialState","isAuthenticated","loading","error","user","slice","name","reducers","LoadUserRequest","state","LoadUserSuccess","action","payload","LoadUserFail","reducer","LoginUser","formValues","dispatch","post","headers","withCredentials","then","response","actions","data","console","log","severity","message","catch","type"],"sources":["C:/Users/mahbu/Documents/MERN/SMIELY/frontend/src/redux/slices/auth.js"],"sourcesContent":["// import { showSnackbar } from \"./app\";\r\nimport { createSlice } from \"@reduxjs/toolkit\";\r\nimport axios from \"../../utils/axios\";\r\nimport { API_LEVEL } from \"../../config\";\r\nimport { ShowsnackBar} from \"../actions\";\r\n// import { ShowsnackBar } from \"../actions\";\r\n// import { showSnackbar } from \"./app\";\r\n// import { showSnackbar } from \"./app\";\r\n\r\n\r\nconst initialState = {\r\n  isAuthenticated: false,\r\n  loading: true,\r\n  error:null,\r\n  user:null,\r\n};\r\n\r\nconst slice = createSlice({\r\n  name: \"auth\",\r\n  initialState,\r\n  reducers: {\r\n    LoadUserRequest:(state)=>  {\r\n      state.loading = true;\r\n    },\r\n    LoadUserSuccess:(state, action)=>  {\r\n      state.isAuthenticated = true;\r\n      state.loading = false;\r\n      state.user = action.payload;\r\n    },\r\n    LoadUserFail:(state, action)=> {\r\n      state.loading = false;\r\n      state.error = action.payload;\r\n      state.isAuthenticated = false;\r\n    },\r\n  },\r\n  \r\n});\r\n\r\n// export the slice of reducer\r\nexport default slice.reducer;\r\n\r\n//  The Actions\r\n\r\n\r\n\r\nexport const LoginUser = (formValues) => async (dispatch) => { \r\n\r\n  try {\r\n    await axios\r\n    .post(\r\n      `${API_LEVEL}/auth/login`,\r\n      {\r\n        ...formValues,\r\n      },\r\n      {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        withCredentials: true,\r\n      }\r\n    )\r\n    .then(function (response) {\r\n     \r\n      dispatch(\r\n         slice.actions.LoadUserSuccess({\r\n           payload: response.data.user\r\n         })\r\n      );\r\n\r\n      console.log(response.data)\r\n\r\n      dispatch( ShowsnackBar({ severity: \"success\", message: response.data.message }))\r\n    \r\n    })\r\n    .catch(function (error) {\r\n      dispatch({\r\n        type: \"LoadUserFail\",\r\n        payload: error,\r\n      });\r\n      dispatch( ShowsnackBar({ severity: \"error\", message: error.message }))\r\n     \r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: \"LoadUserFail\",\r\n      payload: error,\r\n    });\r\n  }\r\n}\r\n\r\n"],"mappings":"AAAA;AACA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,mBAAmB;AACrC,SAASC,SAAS,QAAQ,cAAc;AACxC,SAASC,YAAY,QAAO,YAAY;AACxC;AACA;AACA;;AAGA,MAAMC,YAAY,GAAG;EACnBC,eAAe,EAAE,KAAK;EACtBC,OAAO,EAAE,IAAI;EACbC,KAAK,EAAC,IAAI;EACVC,IAAI,EAAC;AACP,CAAC;AAED,MAAMC,KAAK,GAAGT,WAAW,CAAC;EACxBU,IAAI,EAAE,MAAM;EACZN,YAAY;EACZO,QAAQ,EAAE;IACRC,eAAe,EAAEC,KAAK,IAAK;MACzBA,KAAK,CAACP,OAAO,GAAG,IAAI;IACtB,CAAC;IACDQ,eAAe,EAACA,CAACD,KAAK,EAAEE,MAAM,KAAK;MACjCF,KAAK,CAACR,eAAe,GAAG,IAAI;MAC5BQ,KAAK,CAACP,OAAO,GAAG,KAAK;MACrBO,KAAK,CAACL,IAAI,GAAGO,MAAM,CAACC,OAAO;IAC7B,CAAC;IACDC,YAAY,EAACA,CAACJ,KAAK,EAAEE,MAAM,KAAI;MAC7BF,KAAK,CAACP,OAAO,GAAG,KAAK;MACrBO,KAAK,CAACN,KAAK,GAAGQ,MAAM,CAACC,OAAO;MAC5BH,KAAK,CAACR,eAAe,GAAG,KAAK;IAC/B;EACF;AAEF,CAAC,CAAC;;AAEF;AACA,eAAeI,KAAK,CAACS,OAAO;;AAE5B;;AAIA,OAAO,MAAMC,SAAS,GAAIC,UAAU,IAAK,MAAOC,QAAQ,IAAK;EAE3D,IAAI;IACF,MAAMpB,KAAK,CACVqB,IAAI,CACF,GAAEpB,SAAU,aAAY,EACzB;MACE,GAAGkB;IACL,CAAC,EACD;MACEG,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,eAAe,EAAE;IACnB,CACF,CAAC,CACAC,IAAI,CAAC,UAAUC,QAAQ,EAAE;MAExBL,QAAQ,CACLZ,KAAK,CAACkB,OAAO,CAACb,eAAe,CAAC;QAC5BE,OAAO,EAAEU,QAAQ,CAACE,IAAI,CAACpB;MACzB,CAAC,CACJ,CAAC;MAEDqB,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAACE,IAAI,CAAC;MAE1BP,QAAQ,CAAElB,YAAY,CAAC;QAAE4B,QAAQ,EAAE,SAAS;QAAEC,OAAO,EAAEN,QAAQ,CAACE,IAAI,CAACI;MAAQ,CAAC,CAAC,CAAC;IAElF,CAAC,CAAC,CACDC,KAAK,CAAC,UAAU1B,KAAK,EAAE;MACtBc,QAAQ,CAAC;QACPa,IAAI,EAAE,cAAc;QACpBlB,OAAO,EAAET;MACX,CAAC,CAAC;MACFc,QAAQ,CAAElB,YAAY,CAAC;QAAE4B,QAAQ,EAAE,OAAO;QAAEC,OAAO,EAAEzB,KAAK,CAACyB;MAAQ,CAAC,CAAC,CAAC;IAExE,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOzB,KAAK,EAAE;IACdc,QAAQ,CAAC;MACPa,IAAI,EAAE,cAAc;MACpBlB,OAAO,EAAET;IACX,CAAC,CAAC;EACJ;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}